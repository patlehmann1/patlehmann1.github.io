# Pull Request Quality Gate Workflow
#
# This workflow runs quality checks on pull requests to ensure code quality
# before merging. It validates code against the same standards as production
# deployment but skips the build and deploy steps for faster feedback.
#
name: PR Quality Checks

on:
  pull_request:
    branches: ["master"]
    types: [opened, synchronize, reopened]

# Read-only permissions for PR checks
permissions:
  contents: read
  pull-requests: write

jobs:
  quality-gates:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
            elif [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
                echo "manager=pnpm" >> $GITHUB_OUTPUT
                echo "command=install" >> $GITHUB_OUTPUT
                echo "runner=pnpm" >> $GITHUB_OUTPUT
                npm install -g pnpm
                exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Restore Jest cache
        uses: actions/cache@v4
        with:
          path: |
            .jest-cache
          key: ${{ runner.os }}-jest-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-jest-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: 🔍 Run ESLint code quality checks
        run: ${{ steps.detect-package-manager.outputs.runner }} eslint

      - name: 🔷 Run TypeScript type checking
        run: ${{ steps.detect-package-manager.outputs.runner }} tsc --noEmit

      - name: 🧪 Run tests with coverage
        run: ${{ steps.detect-package-manager.outputs.manager }} run test:ci

      - name: 📊 Display coverage summary
        if: always()
        run: |
          if [ -f "coverage/coverage-summary.json" ]; then
            echo "📊 Test Coverage Summary:"
            cat coverage/coverage-summary.json | head -20
          else
            echo "Coverage summary not found"
          fi

      - name: 🔒 Security audit
        run: ${{ steps.detect-package-manager.outputs.manager }} audit --audit-level=moderate

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report-pr-${{ github.event.pull_request.number }}
          path: coverage/
          retention-days: 14
